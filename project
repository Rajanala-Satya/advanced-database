Source Codes:
Template pages:
Edit.tpl:
<!DOCTYPE html>
<html>
<head>
<title>Edit Movie</title>
</head>
<body>
<h1>Edit Movie</h1>
<form action="/edit/{{ movie[0] }}" method="post">
<label>Title:</label>
<input type="text" name="title" value="{{ movie[1] }}" required><br>
<label>Release Year:</label>
<input type="number" name="release_year" value="{{ movie[2] }}" required><br>
<label>Genre:</label>
<select name="genre_id">
% for genre in genres:
% if genre[0] == movie[3]:
<option value="{{ genre[0] }}" selected>{{ genre[1] }}</option>
% else:
<option value="{{ genre[0] }}">{{ genre[1] }}</option>
% end
% end
</select><br>
<input type="submit" value="Save">
</form>
<p><a href="/">Back to List</a></p>
</body>
</html>
Index.tpl:
<!DOCTYPE html>
<html>
<head>
<title>Movies and Genre</title>
</head>
<body>
<form action="/" method="get">
<label>Search:</label>
<input type="text" name="search" placeholder="Enter title or genre">
<input type="submit" value="Search">
</form>
<h1>Movies and Genre</h1>
<table border="1">
<tr>
<th>ID</th>
<th>Title</th>
<th>Release Year</th>
<th>Genre</th>
<th>Edit</th>
<th>Delete</th>
</tr>
% for movie in movies:
<tr>
<td>{{ movie[0] }}</td>
<td>{{ movie[1] }}</td>
<td>{{ movie[2] }}</td>
<td>{{ movie[3] }}</td>
<td><a href="/edit/{{ movie[0] }}">Edit</a></td>
<td><a href="/delete/{{ movie[0] }}" onclick="return confirm('Are you sure you want
to delete this item?');">Delete</a></td>
</tr>
% end
</table>
<p><a href="/add">Add Movie</a></p>
</body>
</html>
Insert.tpl:
<!DOCTYPE html>
<html>
<head>
<title>Add Movie</title>
</head>
<body>
<h1>Add Movie</h1>
<form action="/add" method="post">
<label>Title:</label>
<input type="text" name="title" required><br>
<label>Release Year:</label>
<input type="number" name="release_year" required><br>
<label>Genre:</label>
<select name="genre_id">
% for genre in genres:
<option value="{{ genre[0] }}">{{ genre[1] }}</option>
% end
</select><br>
<input type="submit" value="Add">
</form>
<p><a href="/">Back to List</a></p>
</body>
</html>
Setup.py:
cursor.execute('''
(
id INTEGER PRIMARY KEY AUTOINCREMENT,
title TEXT NOT NULL,
release_year INTEGER,
genre_id INTEGER,
FOREIGN KEY (genre_id) REFERENCES genre(id)
)
''')
cursor.execute('''
(
id INTEGER PRIMARY KEY AUTOINCREMENT,
name TEXT NOT NULL
)
''')
# Sample data for testing
cursor.execute("INSERT INTO genre (name) VALUES ('Action')")
cursor.execute("INSERT INTO genre (name) VALUES ('Drama')")
cursor.execute("INSERT INTO movies (title, release_year, genre_id) VALUES ('Movie 1',
2020, 1)")
cursor.execute("INSERT INTO movies (title, release_year, genre_id) VALUES ('Movie 2',
2021, 2)")
conn.commit()
Application.py
import sqlite3
from bottle import Bottle, route, run, template, request, redirect
app = Bottle()
# Connect to SQLite database
conn = sqlite3.connect('movie_genre.db')
cursor = conn.cursor()
@app.route('/')
def index():
search_term = request.query.get('search', '')
query = '''
SELECT movies.id, movies.title, movies.release_year, genre.name
FROM movies
WHERE movies.title LIKE ? OR genre.name LIKE ?
'''
cursor.execute(query, (f'%{search_term}%', f'%{search_term}%'))
result = cursor.fetchall()
return template('index', movies=result)
@app.route('/add')
def add_form():
cursor.execute('SELECT * FROM genre')
genres = cursor.fetchall()
return template('insert', genres=genres)
@app.route('/add', method='POST')
def add():
title = request.forms.get('title')
release_year = request.forms.get('release_year')
genre_id = request.forms.get('genre_id')
cursor.execute("INSERT INTO movies (title, release_year, genre_id) VALUES (?, ?, ?)",
(title, release_year, genre_id))
conn.commit()
redirect('/')
@app.route('/edit/<movie_id>')
def edit_form(movie_id):
cursor.execute("SELECT * FROM movies WHERE id=?", (movie_id,))
movie = cursor.fetchone()
cursor.execute('SELECT * FROM genre')
genres = cursor.fetchall()
return template('edit', movie=movie, genres=genres)
@app.route('/edit/<movie_id>', method='POST')
def edit(movie_id):
title = request.forms.get('title')
release_year = request.forms.get('release_year')
genre_id = request.forms.get('genre_id')
cursor.execute("UPDATE movies SET title=?, release_year=?, genre_id=? WHERE id=?",
(title, release_year, genre_id, movie_id))
conn.commit()
redirect('/')
@app.route('/delete/<movie_id>')
def delete(movie_id):
cursor.execute("DELETE FROM movies WHERE id=?", (movie_id,))
conn.commit()
redirect('/')
if _name_ == '_main_':
run(app, host='localhost', port=8090
